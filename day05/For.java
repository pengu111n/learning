package day0308;
/* for 반복문
 * for 반복문이나 while 반복문이나
 * 모두 코드를 반복시키는게 목적이다
 * 하지만 반복횟수와 연관이 적은편인 while반복문과는 다르게
 * for 반복문은 좀더 횟수와 연관된 반복문이다
 * 
 * for 반복문은 다음과 같은 구조로 이루어진다
 * for(제어변수의 선언과 초기화; 반복 조건식; 코드 실행후 제어변수의 변화식) { 
 *          반복할코드
 * }
 * */
public class For {
    public static void main(String[] args) {
        // 1부터 4까지 차례대로 출력하는 for 반복문
        for(int i =1; i <= 4; i++) {
            System.out.println(i);
        }
        /* 위의 for 반복문은 다음과 같은 순서를 거친다
         * 1. int i =1; 이실행되서 i의 현재 값이 1이 된다.
         * 2. i <= 4;가 실행되는데 i의 현재값이 1 이므로 true
         * 3. 조건식이 true가 나왔으므로 반복할 코드인 System.out.prinln(i)가 실행되어
         *    화면에 1이 출력된다
         * 4. 더이상 반복시킬 코드가 없으므로 변화식이 i++이 실행되서 i의 현재값이 2가된다
         * 5. i <=4; 가 실행되는데 i의 현재 값이 2이므로 true 
         * 6. 조건식에 true가 나왔으므로 반복할 코드인 System.out.println(i); 가 실행되서
         *    화면에 2ㅇ가 출력
         * 7. 더이상 반복시킬 코드가 없으므로 변화식인i++ 이 실행되서 i 의 현재값이 3이된다
         * .... i <= 4; 실행 i 의 현재값이 4이므로 true
         * 12. 조건식이 true가 나왓으므로 반복할 코드인 System.out.println(i)가 실행되서
         * 화면에 4가 출력된다
         * 13. 더이상 반복시킬 코드가 없으므로 변화식인 i++이 실행되어 i의 현재값이 5가된다
         * 14. i <= 4; 가 실행되는데 i의 현재 값이 5이므로false가 나와서 for반복문이 종료된다.
         * 
         * for 반복문에 관한 몇가지 팁들
         * 1. 제어변수의 초기화나 조건식에 다른 변수가 들어갈수 있다.
         * */
        
        int start = 3;
        int end = 7;
        for(int i = start; i <= end; i++) {
            System.out.println(i);
        }
        
        // 2. 제어변수는 정말로 변수이다 다만 유효 범위는 해당 for문 안이 된다
        for(int i = 1; i <=3; i++) {
            System.out.println(i);
        }
        
        // 3. 만약 처음부터 반복 조건식이 false가 나오면
//              while문과 ㅂ마찬가지로 코드는 처음부터 실행되지 않는다.
        for(int i = 1; i < 0; i++) {
            System.out.println("실행될까");
        }
        
        // 4. 제어변수의 변화식은 ++, --뿐만이 아니라 다른 할당 연산자를 사용할 수도 있다.
        for(int i = 1; i <5000; i*=100) {
            System.out.println(i);
        }
        
        // 5. 제어변수의 선언과 초기화, 조건식, 변화식을 모두 for문의()에서
        //    분리 시킬수도 있지만 이 방법은 최대한 사용을 자제하는 것이 좋다.
        //    단, 분리되더라도, ;의 갯수는 반드시 ()안에 2개가 들어가 있어야한다
        
        int i = 11;
        for(;;) {
            if (i>13) {
                break;
                
            }
            System.out.println(i);
            i++;
        }
        
        
    }
}
